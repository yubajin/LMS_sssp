<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">

	<welcome-file-list>
    	<welcome-file>UserLogin.jsp</welcome-file>
  	</welcome-file-list>

	<!-- 配置启动 IOC 容器的 Listener -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- 配置字符编码过滤器 -->
	<!-- 字符编码过滤器必须配置在所有过滤器的最前面! -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 配置可以把 POST 请求转为 PUT、DELETE 请求的 Filter -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 配置 OpenEntityManagerInViewFilter. 可以解决懒加载异常的问题 -->
	<filter>
		<filter-name>OpenEntityManagerInViewFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>OpenEntityManagerInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 增加对静态资源的处理 -->
	<!--  
	<servlet-mapping>    
	    <servlet-name>default</servlet-name>    
	    <url-pattern>*.js</url-pattern>    
	    <url-pattern>*.css</url-pattern>    
	    <url-pattern>/WEB-INF/fonts/*</url-pattern> 
	    <url-pattern>/WEB-INF/ico/*</url-pattern> 
	    <url-pattern>/WEB-INF/img/*</url-pattern>    
	</servlet-mapping>
	-->
	
	<!-- 配置 SpringMVC 的 DispatcherServlet -->
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	
    <servlet>
        <servlet-name>login</servlet-name>
        <servlet-class>com.qq.connect.demo.IndexServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>login</servlet-name>
        <!-- 业界标准 用.do后缀来表示 controler -->
        <url-pattern>/login.do</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>afterlogin</servlet-name>
        <servlet-class>com.qq.connect.demo.afterlogin</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>afterlogin</servlet-name>
        <!-- 业界标准 用.do后缀来表示 controler -->
        <url-pattern>/afterlogin.do</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>shuoshuo</servlet-name>
        <servlet-class>com.qq.connect.demo.ShuoShuoServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>shuoshuo</servlet-name>
        <url-pattern>/shuoshuo.do</url-pattern>
    </servlet-mapping>
	
	
</web-app>